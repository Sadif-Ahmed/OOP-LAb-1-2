#include<iostream>
#include<cstring>
#include<cmath>
#include "Book.cpp"
using namespace std;

class BookShop
{
    char name[100];
    Book* books;
    int size;
    int count;
public:
    void setName(char* name)
    {
        /*Set the name of the bookshop to the given name*/
        strcpy(this->name,name);
    }
    BookShop()
    {
        //Default constructor
        /*Initialize with size 5 and name to empty string ""*/
        this->size=5;
        books=new Book[5];
        this->count=0;
        strcpy(this->name,"Oblivion");
    }
    BookShop(char *name,int size)
    {
        //Parameterized constructor
        /*Initialize with the given name and size*/
        this->size=size;
        books=new Book[this->size];
        this->count=0;
        strcpy(this->name,name);
    }

    BookShop(const BookShop& pr)
    {
        //Copy constructor
        /*Write necessary code for the copy constructor*/
        this->size=pr.size;
        this->books=new Book[this->size];
        this->count=pr.count;
        strcpy(this->name,pr.name);
        for(int i=0; i<this->count; i++)
        {
            books[i]=pr.books[i];
        }

    }

    ~BookShop()
    {
        //Destructor
        /*Free memory as applicable*/
        delete []this->books;
    }

    void addBook(Book b)
    {
        /*Add book b to the end of the list*/
        if(this->count==this->size)
        {
            cout<<"The Bookshop is full."<<endl;
        }
        this->books[this->count]=b;
        this->count++;
    }

    void addBook(Book *ba, int count)
    {
        /*Add the given array of books ba to the end of the list*/
        if((this->count+count)>=this->size)
        {
            cout<<"The Bookshop is full."<<endl;
        }
        for(int i=0; i<count; i++)
        {
            this->books[this->count]=ba[i];
            this->count++;
        }
    }

    Book getBookInfo(char* title)
    {
        /*Return the **first** book that has the given title. Assume there is atleast one book in the list with the given title*/
        Book res;
        for(int i=0; i<this->count; i++)
        {
            if(strcmpi(this->books[i].getTitle(),title)==0)
            {
                res=books[i];
                break;
            }
        }
        return res;

    }

    void updateBookPrice(int isbn, int price)
    {
        /*Update the price of the book with given isbn to the given price*/
        int i;
        for(i=0; i<this->count; i++)
        {
            if(this->books[i].getISBN()==isbn)
            {
                this->books[i].setPrice(price);
                break;
            }
        }
        if(i==this->count)
        {
            cout<<"Not Found"<<endl;
        }
    }

    void removeBook(int isbn)
    {
        /*Remove the book with the given isbn from the list.
        After removing a book all the books below the removed book will be shifted up, i.e, there will be no hole in the list*/
        int i,j;
        for(i=0; i<this->count; i++)
        {
            if(this->books[i].getISBN()==isbn)
            {
                for(j=i; j<(this->count-1); j++)
                {
                    books[j]=books[j+1];
                }
                this->count-=1;
                break;
            }
        }
        if(i==this->count)
        {
            cout<<"Not Found"<<endl;
        }

    }

    int totalPrice()
    {
        /*Return the sum of the prices of all the books in the list*/
        int total=0;;
        for(int i=0; i<this->count; i++)
        {
            total+=this->books[i].getPrice();
        }
        return total;

    }

    void print()
    {
        /*Print the bookshop's name followed by information of all the books in the bookshop*/
        cout<<"Bookshop name : "<<this->name<<endl;
        for(int i=0; i<this->count; i++)
        {
            cout<<"Book no." << i+1<<":"<<" ISBN: "<< this->books[i].getISBN();
            cout<<", Title: " << this->books[i].getTitle()<<", Price:"<<this->books[i].getPrice()<<endl;
        }
    }

    BookShop mergeShop(BookShop b)
    {
        /* Return a new bookshop object that will contain all the books of this bookshop and the given bookshop b*/
        BookShop res("La La La",this->size+b.count);
        int i,j;
        for(i=0; i<(count); i++)
        {
            res.books[res.count]=books[i];
            res.count++;
        }
        for(j=0; j<b.count ; i++,j++)
        {
            res.books[res.count]=b.books[j];
            res.count++;
        }

        return res;

    }
};

int main()
{
    BookShop bs1;
    bs1.setName("Boimela");
    Book b1(101,"Teach Yourself C++",100);
    Book b2(102,"Teach Yourself C",200);
    Book b3(103,"Java For Dummies",300);
    bs1.addBook(b1);
    bs1.addBook(b2);
    bs1.addBook(b3);
    bs1.print(); /*Output:
					Bookshop Name: Boimela
					ISBN: 101, Title: Teach Yourself C++, Price: 100
					ISBN: 102, Title: Teach Yourself C, Price: 200
					ISBN: 103, Title: Java For Dummies, Price: 300
				 */
    cout<<endl;
    cout<<"Total price of books: "<<bs1.totalPrice()<<endl;	/*Output:
															   Total price of books: 600
															*/

    cout<<endl;
    bs1.removeBook(102);
    bs1.print(); /*Output:
					Bookshop Name: Boimela
					ISBN: 101, Title: Teach Yourself C++, Price: 100
					ISBN: 103, Title: Java For Dummies, Price: 300
				 */

    cout<<endl;
    bs1.updateBookPrice(101,500);
    bs1.print(); /*Output:
					Bookshop Name: Boimela
					ISBN: 101, Title: Teach Yourself C++, Price: 500
					ISBN: 103, Title: Java For Dummies, Price: 300
				 */

    cout<<endl;
    Book jfd=bs1.getBookInfo("Java For Dummies");
    jfd.print();  /*Output:
					 ISBN: 103, Title: Java For Dummies, Price: 300
				 */

    cout<<endl;
    Book ba[3]= {Book(201,"Operating Systems",1000),Book(202,"Compilers",2000),Book(203,"Computer Networks",1500)};
    BookShop bs2("Puthighor",5);
    bs2.addBook(ba,3);
    bs2.print();  /*Output:
					 Bookshop Name: Puthighor
					 ISBN: 201, Title: Operating Systems, Price: 1000
					 ISBN: 202, Title: Compilers, Price: 2000
					 ISBN: 203, Title: Computer Networks, Price: 1500
				 */

    cout<<endl;
    BookShop bs3=bs1.mergeShop(bs2);
    bs3.setName("Mullick Brothers");
    bs3.print(); /*Output:
					Bookshop Name: Mullick Brothers
					ISBN: 101, Title: Teach Yourself C++, Price: 500
					ISBN: 103, Title: Java For Dummies, Price: 300
					ISBN: 201, Title: Operating Systems, Price: 1000
					ISBN: 202, Title: Compilers, Price: 2000
					ISBN: 203, Title: Computer Networks, Price: 1500
				 */
    return 0;
}
